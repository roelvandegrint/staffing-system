name: Deploy Employees Svc

env:
  CONTAINER_REGISTRY: roelvandegrint.azurecr.io
  CONTAINER_IMAGE: $CONTAINER_REGISTRY/cont-staffing-employees-svc:${{ github.sha }}
  RESOURCE_GROUP: rg-staffing-system

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: [add-employees-svc-iac]
    paths:
      - "/employees-service/**"
      - ".github/workflows/cont-staffing-employees-service-deploy.yml"

  # Allow mannually trigger
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: echo vars
        run: echo "Registry= ${{ env.CONTAINER_REGISTRY }}, CONTAINER_IMAGE=${{env.CONTAINER_IMAGE}},RESOURCE_GROUP=${{env.RESOURCE_GROUP}}"

      # - name: Checkout to the branch
      #   uses: actions/checkout@v2

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Log in to container registry
      #   uses: docker/login-action@v1
      #   with:
      #     registry: roelvandegrint.azurecr.io
      #     username: ${{ secrets.CONTSTAFFINGSYSTEMFRONTEND_REGISTRY_USERNAME }}
      #     password: ${{ secrets.CONTSTAFFINGSYSTEMFRONTEND_REGISTRY_PASSWORD }}

      # - name: Build and push container image to registry
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     tags: ${{ CONTAINER_IMAGE }}
      #     file: ./employees-service/Dockerfile
      #     context: ./

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Azure Login
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.CONTSTAFFINGSYSTEMFRONTEND_AZURE_CREDENTIALS }}

  #     - name: Deploy infra
  #       uses: azure/arm-deploy@v1
  #       with:
  #         subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
  #         resourceGroupName: ${{ RESOURCE_GROUP }}
  #         template: ./azure/employees-svc.bicep
  #         parameters: | 
  #           ./azure/employees-svc.parameters.json
  #           container_image=${{ env.CONTAINER_IMAGE }}
  #           container_registry_uri=${{ env.CONTAINER_REGISTRY }}
  #           container_registry_username=${{ secrets.CONTSTAFFINGSYSTEMFRONTEND_REGISTRY_USERNAME }}
  #           container_registry_password=${{ secrets.CONTSTAFFINGSYSTEMFRONTEND_REGISTRY_PASSWORD }}
  #         failOnStdErr: false
